<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>📚 Posts on Jonathan&#39;s Blog</title>
    <link>https://jonathan-tw.github.io/posts/</link>
    <description>Recent content in 📚 Posts on Jonathan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 13 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jonathan-tw.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2023 軟韌新鮮人 面試時程</title>
      <link>https://jonathan-tw.github.io/posts/2023-%E8%BB%9F%E9%9F%8C%E6%96%B0%E9%AE%AE%E4%BA%BA-%E9%9D%A2%E8%A9%A6%E6%99%82%E7%A8%8B/</link>
      <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jonathan-tw.github.io/posts/2023-%E8%BB%9F%E9%9F%8C%E6%96%B0%E9%AE%AE%E4%BA%BA-%E9%9D%A2%E8%A9%A6%E6%99%82%E7%A8%8B/</guid>
      <description>Ref 代碼隨想錄 TSMC &amp;amp; IC Design House(M,R,P)考古 Leetcode Blind 75 CodeTop Leetcode C++ Solutions Behavior questions 為什麼想來我們公司？ 你在xx有什麼特別的貢獻？ (xx = 實習公司) 在你過去工作經驗或求學過程中，你認為最大的困難/挑戰是?為什麼？ 在你過去工作經驗或求學過程中，你認為最大的成就/果是?為什麼？ 你人生遇到最挫折的事情？你怎</description>
    </item>
    
    <item>
      <title>(課程筆記)(CTU in Prague) Middleware architectures 2 Review</title>
      <link>https://jonathan-tw.github.io/posts/middleware-architectures-2-review/</link>
      <pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jonathan-tw.github.io/posts/middleware-architectures-2-review/</guid>
      <description>Lecture 2 - Asynchronous I/O Programming Models Concurrency (Asynchronous I/O = cooperative multitasking) Multiple tasks have the ability to run in an overlapping manner Concurrency does not imply parallelism! Multiprocessing CPU-bounded tasks Multithreading I/O bound tasks It uses preemtive multitasking Promise object: an async object that be returned by the async function. An object representing completion or failure of an asynchronous operation. Await function: makes program to wait until the promise is resolved or rejected can only be usded inside async function Lecture 3 - Cloud Architectures Cloud Computing Concepts On-demand and self-service (當需要資源時才被提供,自動化) Resources are provisioned as they are requested and when they are required ‒ No human interaction, automatic No human interaction, automatic Board network access (資源可被網路</description>
    </item>
    
    <item>
      <title>(課程筆記)(CTU in Prague) Middleware architectures 2 HW</title>
      <link>https://jonathan-tw.github.io/posts/middleware-architectures-2-hw/</link>
      <pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jonathan-tw.github.io/posts/middleware-architectures-2-hw/</guid>
      <description>AJAX / XHR states / CORS / Data access Tasks Create a simple HTML page with an info text field and a single button Implement a JavaScript function which is triggered when the button is clicked The function should fetch relatively large file (e.g. 100-200MB) in the text field show following states: loading - when the open method was called loaded - when the send method was called downloading - while the data is being downloaded finished downloading - when the data has beeen downloaded you can use Promise, async/await Description AJAX overview: Asynchronous JavaScript and XML technique for creating better, faster, and more interactive web applications relies on XML, JSON, HTML, CSS and JavaScript AJAX is not a programming language Running this demo by using the jquery module to achieve the ajax request. Following the xhr state in https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState.</description>
    </item>
    
    <item>
      <title>FFmpeg開發系列1 - FFmpeg、OpenCV、CUDA、NV_Codec GPU加速環境搭建</title>
      <link>https://jonathan-tw.github.io/posts/ffmpeg_note_1/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jonathan-tw.github.io/posts/ffmpeg_note_1/</guid>
      <description>OS:Ubuntu: 16.04 / 18.04 OpencCV: 4.2 Cuda: 8.0 / 9.0 Nivida Driver: 418.56 (GTX 1050ti) / 435 (GTX 1060) CPU: i3-8300 3.70Ghz ffmpeg: 4.2 / 4.2.4 nv_codec_headers: 8.2 / 9.0 Install Nvidia Driver list available Nvidia Driver 1 ubuntu-drivers devices add repoitory 1 2 sudo add-apt-repository ppa:graphics-drivers/ppa sudo apt update instll Nvidia Driver 1 sudo apt install nvidia-xxx Install CUDA Check CUDA and Nvidia driver compatibility https://docs.nvidia.com/deploy/cuda-compatibility/index.html Download Cuda runfile which determines by your os https://developer.nvidia.com/cuda-downloads please choose not to install nvidia graphics driver, or the driver will be updated** install cuda (ex: cuda 8.0 for ubuntnu 16.04 ) 1 sudo sh cuda_8.0.61_375.26_linux.run Add environment variables to ~/.bashrc 1 2 3 4 sudo nano ~/.bashrc export PATH=/usr/local/cuda/bin:$PATH export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH source ~/.bashrc Install NV_codec (optional for gpu ) download nv_codec_headers 8.2: https://github.com/FFmpeg/nv-codec-headers/tree/sdk/8.2 install nv_codec_headers 8.2 1 sudo make install nv_codec_headers 9</description>
    </item>
    
  </channel>
</rss>
