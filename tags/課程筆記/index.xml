<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>課程筆記 on Jonathan&#39;s Blog</title>
    <link>https://jonathan-tw.github.io/tags/%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98/</link>
    <description>Recent content in 課程筆記 on Jonathan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Mon, 19 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jonathan-tw.github.io/tags/%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(課程筆記)(NTUST) Information Retrieval</title>
      <link>https://jonathan-tw.github.io/posts/%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98ntust-information-retrieval/</link>
      <pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jonathan-tw.github.io/posts/%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98ntust-information-retrieval/</guid>
      <description>HW1 - Vector Space Model TF、IDF計算方式: 一開始會讀取document的資料前處理，先去做一些normalized，讓lexicon不要有重複的term，而為了讓程式能在1分鐘內跑完，lexicon使用c++的unordered_map下去存，unordered_map使用hash func</description>
    </item>
    
    <item>
      <title>(課程筆記)(NTUST) Network Communication Protocols</title>
      <link>https://jonathan-tw.github.io/posts/%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98ntust-network-communication-protocols/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jonathan-tw.github.io/posts/%E8%AA%B2%E7%A8%8B%E7%AD%86%E8%A8%98ntust-network-communication-protocols/</guid>
      <description>Layered Outline What&amp;rsquo;s a protocol? protocols define format, order of messages sent and received among network entities, and actions taken on message transmission, receipt TCP/IP 5 Layer Application Layer HTTP、DHCP、RPC、P2P、DNS Transport Layer UDP、TCP Network Layer (IP) IP、ICMP、OSPF、BGP Data-link Layer (MAC) MAC、VLAN、STP Physical Layer 網路挑線 ISO/OSI 7 Layer  Presentation: allow applications to interpret meaning of data. example: encryption, compression, machine-specific conventions.  Session: synchronization, checkpointing, recovery of data exchange. 只要是在網絡上跑的包，都是完整的</description>
    </item>
    
    <item>
      <title>(課程筆記)(CTU in Prague) Middleware architectures 2 Review</title>
      <link>https://jonathan-tw.github.io/posts/middleware-architectures-2-review/</link>
      <pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jonathan-tw.github.io/posts/middleware-architectures-2-review/</guid>
      <description>Lecture 2 - Asynchronous I/O Programming Models Concurrency (Asynchronous I/O = cooperative multitasking) Multiple tasks have the ability to run in an overlapping manner Concurrency does not imply parallelism! Multiprocessing CPU-bounded tasks Multithreading I/O bound tasks It uses preemtive multitasking Promise object: an async object that be returned by the async function. An object representing completion or failure of an asynchronous operation. Await function: makes program to wait until the promise is resolved or rejected can only be usded inside async function Lecture 3 - Cloud Architectures Cloud Computing Concepts On-demand and self-service (當需要資源時才被提供,自動化) Resources are provisioned as they are requested and when they are required ‒ No human interaction, automatic No human interaction, automatic Board network access (資源可被網路</description>
    </item>
    
    <item>
      <title>(課程筆記)(CTU in Prague) Middleware architectures 2 HW</title>
      <link>https://jonathan-tw.github.io/posts/middleware-architectures-2-hw/</link>
      <pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jonathan-tw.github.io/posts/middleware-architectures-2-hw/</guid>
      <description>AJAX / XHR states / CORS / Data access Tasks Create a simple HTML page with an info text field and a single button Implement a JavaScript function which is triggered when the button is clicked The function should fetch relatively large file (e.g. 100-200MB) in the text field show following states: loading - when the open method was called loaded - when the send method was called downloading - while the data is being downloaded finished downloading - when the data has beeen downloaded you can use Promise, async/await Description AJAX overview: Asynchronous JavaScript and XML technique for creating better, faster, and more interactive web applications relies on XML, JSON, HTML, CSS and JavaScript AJAX is not a programming language Running this demo by using the jquery module to achieve the ajax request. Following the xhr state in https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState.</description>
    </item>
    
  </channel>
</rss>
